openapi: 3.0.3
info:
  title: Corbado API
  version: 1.0.0
paths:
  /unused/{sessionID}:
    get:
      x-hidden: true
      description: unused
      operationId: unused
      tags:
        - Common
      security:
        - projectID: []
      parameters:
        - name: remoteAddress
          in: query
          description: Client's remote address
          required: false
          schema:
            type: string
        - name: userAgent
          in: query
          description: Client's user agent
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Field sorting
          required: false
          schema:
            type: string
        - name: filter[]
          in: query
          description: Field filtering
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          examples:
            filterEmail:
              summary: Filter for one email address
              value:
                - identifierType:eq:email
                - identifierValue:eq:mail@example.com
            filterTimepoint:
              summary: timePoint after 20/07/2021
              value:
                - timePoint:gt:2021-07-20T00:00:00
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: sessionID
          in: path
          description: ID of session
          required: true
          schema:
            type: string
            minLength: 30
            maxLength: 30
      responses:
        '200':
          description: unused
          content:
            application/json:
              schema:
                type: object
                properties:
                  p1:
                    type: object
                    required:
                      - page
                      - totalPages
                      - totalItems
                    properties:
                      page:
                        description: current page returned in response
                        type: integer
                        default: 1
                      totalPages:
                        description: total number of pages available
                        type: integer
                      totalItems:
                        description: total number of items available
                        type: integer
                  p2:
                    type: object
                    required:
                      - remoteAddress
                      - userAgent
                    properties:
                      remoteAddress:
                        description: client's IP address
                        type: string
                        example: '::ffff:172.18.0.1'
                      userAgent:
                        description: client's User Agent
                        type: string
                        example: >-
                          Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                          AppleWebKit/537.36 (KHTML, like Gecko)
                          Chrome/104.0.0.0 Safari/537.36
                  p3:
                    description: generic ID
                    type: string
                  p4:
                    description: ID of the user
                    type: string
                  p5:
                    description: ID of the email
                    type: string
                  p6:
                    description: ID of the email magic link
                    type: string
                  p7:
                    description: ID of the phone number
                    type: string
                  p8:
                    description: >-
                      Timestamp of when the entity was created in
                      yyyy-MM-dd'T'HH:mm:ss format
                    type: string
                  p9:
                    description: >-
                      Timestamp of when the entity was last updated in
                      yyyy-MM-dd'T'HH:mm:ss format
                    type: string
                  p10:
                    description: >-
                      Timestamp of when the entity was deleted in
                      yyyy-MM-dd'T'HH:mm:ss format
                    type: string
                  p11:
                    description: ID of the device
                    type: string
                  p12:
                    description: Additional payload in JSON format
                    type: string
                    example: '{"projectAbbreviation":"CRBD"}'
                  p13:
                    type: string
                    enum:
                      - active
                      - pending
                      - deleted
                    description: Generic status that can describe Corbado entities
                  p14:
                    description: ID of project
                    type: string
                  p15:
                    description: >-
                      Unique ID of request, you can provide your own while
                      making the request, if not the ID will be randomly
                      generated on server side
                    type: string
                    example: req-557...663
                  p16:
                    allOf:
                      - type: object
                        required:
                          - httpStatusCode
                          - message
                          - requestData
                          - runtime
                        properties:
                          httpStatusCode:
                            description: HTTP status code of operation
                            type: integer
                            format: int32
                          message:
                            type: string
                            example: OK
                          requestData:
                            description: >-
                              Data about the request itself, can be used for
                              debugging
                            type: object
                            required:
                              - requestID
                            properties:
                              requestID:
                                description: >-
                                  Unique ID of request, you can provide your own
                                  while making the request, if not the ID will
                                  be randomly generated on server side
                                type: string
                                example: req-557...663
                              link:
                                description: Link to dashboard with details about request
                                type: string
                                example: >-
                                  https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                          runtime:
                            description: Runtime in seconds for this request
                            type: number
                            format: float
                            example: 0.06167686
                      - type: object
                        required:
                          - error
                        properties:
                          data:
                            type: object
                          error:
                            type: object
                            required:
                              - type
                            properties:
                              type:
                                description: Type of error
                                type: string
                              details:
                                description: Details of error
                                type: string
                              validation:
                                description: Validation errors per field
                                type: array
                                items:
                                  type: object
                                  required:
                                    - field
                                    - message
                                  properties:
                                    field:
                                      type: string
                                    message:
                                      type: string
                              links:
                                description: Additional links to help understand the error
                                type: array
                                items:
                                  type: string
                  p17:
                    type: array
                    items:
                      type: string
                      enum:
                        - email
                        - phone_number
                        - webauthn
                        - password
                      description: Authentication methods
                  p18:
                    type: object
                    description: User entry with emails and phone numbers
                    required:
                      - ID
                      - name
                      - fullName
                      - created
                      - updated
                      - status
                      - emails
                      - phoneNumbers
                      - usernames
                      - socialAccounts
                    properties:
                      ID:
                        description: ID of the user
                        type: string
                      name:
                        type: string
                      fullName:
                        type: string
                      created:
                        description: >-
                          Timestamp of when the entity was created in
                          yyyy-MM-dd'T'HH:mm:ss format
                        type: string
                      updated:
                        description: >-
                          Timestamp of when the entity was last updated in
                          yyyy-MM-dd'T'HH:mm:ss format
                        type: string
                      status:
                        type: string
                        enum:
                          - active
                          - pending
                          - deleted
                        description: Generic status that can describe Corbado entities
                      emails:
                        type: array
                        items:
                          type: object
                          description: User's email
                          required:
                            - ID
                            - email
                            - created
                            - updated
                            - status
                          properties:
                            ID:
                              description: generic ID
                              type: string
                            email:
                              type: string
                            created:
                              description: >-
                                Timestamp of when the entity was created in
                                yyyy-MM-dd'T'HH:mm:ss format
                              type: string
                            updated:
                              description: >-
                                Timestamp of when the entity was last updated in
                                yyyy-MM-dd'T'HH:mm:ss format
                              type: string
                            status:
                              type: string
                              enum:
                                - active
                                - pending
                                - deleted
                              description: >-
                                Generic status that can describe Corbado
                                entities
                      phoneNumbers:
                        type: array
                        items:
                          type: object
                          description: User's phone number
                          required:
                            - ID
                            - phoneNumber
                            - created
                            - updated
                            - status
                          properties:
                            ID:
                              description: generic ID
                              type: string
                            phoneNumber:
                              type: string
                            created:
                              description: >-
                                Timestamp of when the entity was created in
                                yyyy-MM-dd'T'HH:mm:ss format
                              type: string
                            updated:
                              description: >-
                                Timestamp of when the entity was last updated in
                                yyyy-MM-dd'T'HH:mm:ss format
                              type: string
                            status:
                              type: string
                              enum:
                                - active
                                - pending
                                - deleted
                              description: >-
                                Generic status that can describe Corbado
                                entities
                      usernames:
                        type: array
                        items:
                          type: object
                          description: User's username
                          required:
                            - ID
                            - username
                            - created
                            - updated
                            - status
                          properties:
                            ID:
                              description: generic ID
                              type: string
                            username:
                              type: string
                            created:
                              description: >-
                                Timestamp of when the entity was created in
                                yyyy-MM-dd'T'HH:mm:ss format
                              type: string
                            updated:
                              description: >-
                                Timestamp of when the entity was last updated in
                                yyyy-MM-dd'T'HH:mm:ss format
                              type: string
                            status:
                              type: string
                              enum:
                                - active
                                - pending
                                - deleted
                              description: >-
                                Generic status that can describe Corbado
                                entities
                      socialAccounts:
                        type: array
                        items:
                          type: object
                          description: User's social account
                          required:
                            - providerType
                            - identifierValue
                            - avatarUrl
                            - fullName
                          properties:
                            providerType:
                              type: string
                              enum:
                                - google
                                - microsoft
                                - github
                            identifierValue:
                              type: string
                            avatarUrl:
                              type: string
                            fullName:
                              type: string
                  p19:
                    description: Login Identifier type (deprecated)
                    type: string
                    enum:
                      - email
                      - phone_number
                      - custom
                  p20:
                    description: ID of the email OTP
                    type: string
                  p21:
                    description: Application type
                    type: string
                    enum:
                      - empty
                      - web
                      - native
                  p22:
                    description: What session management should be used
                    type: string
                    enum:
                      - SessionManagementCorbado
                      - SessionManagementOwn
                  p23:
                    description: High entropy values from browser
                    type: object
                    required:
                      - platform
                      - platformVersion
                      - mobile
                    properties:
                      platform:
                        description: Platform
                        type: string
                        example: macOS
                      platformVersion:
                        description: Platform version
                        type: string
                        example: 14.1.2
                      mobile:
                        description: Mobile
                        type: boolean
                  p24:
                    type: object
                    required:
                      - type
                      - enforceVerification
                      - useAsLoginIdentifier
                    properties:
                      type:
                        description: Login Identifier type
                        type: string
                        enum:
                          - email
                          - phone
                          - username
                      enforceVerification:
                        type: string
                        enum:
                          - none
                          - signup
                          - at_first_login
                      useAsLoginIdentifier:
                        type: boolean
                      metadata:
                        type: object
                  p25:
                    type: string
                    enum:
                      - google
                      - microsoft
                      - github
                  p26:
                    description: Login Identifier type
                    type: string
                    enum:
                      - email
                      - phone
                      - username
                  p27:
                    type: object
                    required:
                      - sessionID
                      - userID
                      - identifierValue
                      - createdMs
                      - lastActionMs
                      - expiresMs
                      - status
                    properties:
                      sessionID:
                        type: string
                      userID:
                        type: string
                      identifierValue:
                        type: string
                      createdMs:
                        type: integer
                        format: int64
                      lastActionMs:
                        type: integer
                        format: int64
                      expiresMs:
                        type: integer
                        format: int64
                      status:
                        type: string
                        enum:
                          - active
                          - logged_out
                          - expired
                          - inactivity_reached
                          - revoked
                  p28:
                    type: string
                    enum:
                      - active
                      - logged_out
                      - expired
                      - inactivity_reached
                      - revoked
  /users:
    post:
      description: Creates a new user
      operationId: UserCreate
      tags:
        - Users
      security:
        - basicAuth: []
      x-codeSamples:
        - lang: NodeJS
          label: Create a new user using Corbado SDK
          source: |
            const { Corbado } = require('@corbado/node-sdk');

            const corbado = new Corbado({
              projectId: 'pro-xxxxx',
              apiSecret: 'corbado_xxxxx'
            });

            const user = await corbado.users.create({
              email: 'user@example.com',
              name: 'John Doe'
            });
        - lang: PHP
          label: Create a new user using Corbado SDK
          source: |
            use Corbado\SDK;

            $corbado = new SDK([
              'projectId' => 'pro-xxxxx',
              'apiSecret' => 'corbado_xxxxx'
            ]);

            $user = $corbado->users->create([
              'email' => 'user@example.com',
              'name' => 'John Doe'
            ]);
        - lang: Python
          label: Create a new user using Corbado SDK
          source: |
            from corbado import Corbado

            corbado = Corbado(
              project_id='pro-xxxxx',
              api_secret='corbado_xxxxx'
            )

            user = corbado.users.create(
              email='user@example.com',
              name='John Doe'
            )
        - lang: Go
          label: Create a new user using Corbado SDK
          source: >
            import "github.com/corbado/corbado-go"


            client := corbado.NewClient("pro-xxxxx", "corbado_xxxxx")


            user, err := client.Users.Create(context.Background(),
            &corbado.UserCreateRequest{
              Email: "user@example.com",
              Name:  "John Doe",
            })
        - lang: Ruby
          label: Create a new user using Corbado SDK
          source: |
            require 'corbado'

            corbado = Corbado::Client.new(
              project_id: 'pro-xxxxx',
              api_secret: 'corbado_xxxxx'
            )

            user = corbado.users.create(
              email: 'user@example.com',
              name: 'John Doe'
            )
        - lang: Perl
          label: Create a new user using Corbado SDK
          source: |
            use Corbado::SDK;

            my $corbado = Corbado::SDK->new(
              project_id => 'pro-xxxxx',
              api_secret => 'corbado_xxxxx'
            );

            my $user = $corbado->users->create({
              email => 'user@example.com',
              name  => 'John Doe'
            });
        - lang: Java
          label: Create a new user using Corbado SDK
          source: |
            import com.corbado.sdk.Corbado;
            import com.corbado.sdk.models.UserCreateRequest;

            Corbado corbado = new Corbado.Builder()
                .projectId("pro-xxxxx")
                .apiSecret("corbado_xxxxx")
                .build();

            UserCreateRequest request = new UserCreateRequest.Builder()
                .email("user@example.com")
                .name("John Doe")
                .build();

            User user = corbado.users().create(request);
        - lang: C#
          label: Create a new user using Corbado SDK
          source: |
            using Corbado.SDK;

            var corbado = new CorbadoClient(
                projectId: "pro-xxxxx",
                apiSecret: "corbado_xxxxx"
            );

            var user = await corbado.Users.CreateAsync(new UserCreateRequest
            {
                Email = "user@example.com",
                Name = "John Doe"
            });
        - lang: C++
          label: Create a new user using Corbado SDK
          source: |
            #include <corbado/sdk.hpp>

            corbado::Client corbado("pro-xxxxx", "corbado_xxxxx");

            corbado::UserCreateRequest request{
                .email = "user@example.com",
                .name = "John Doe"
            };

            auto user = corbado.users().create(request);
        - lang: Rust
          label: Create a new user using Corbado SDK
          source: |
            use corbado::Client;

            let corbado = Client::new(
                "pro-xxxxx",
                "corbado_xxxxx"
            );

            let user = corbado.users().create(UserCreateRequest {
                email: "user@example.com".to_string(),
                name: "John Doe".to_string(),
            }).await?;
        - lang: javascript
          label: Create a new user using Corbado SDK
          source: |
            const corbado = new Corbado({
              projectId: 'pro-xxxxx',
              apiSecret: 'corbado_xxxxx'
            });

            // In a server endpoint
            const user = await corbado.users.create({
              email: 'user@example.com',
              name: 'John Doe'
            });
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                fullName:
                  type: string
                status:
                  type: string
                  enum:
                    - pending
                    - active
                    - disabled
                explicitWebauthnID:
                  type: string
                  description: >-
                    For connect projects, the webauthnID can be explicitly set
                    for a user
      responses:
        '200':
          description: User has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - userID
                  - status
                properties:
                  userID:
                    type: string
                  fullName:
                    type: string
                  status:
                    type: string
                    enum:
                      - pending
                      - active
                      - disabled
                  explicitWebauthnID:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}:
    get:
      description: Returns a user
      operationId: UserGet
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User has been returned
          content:
            application/json:
              schema:
                type: object
                required:
                  - userID
                  - status
                properties:
                  userID:
                    type: string
                  fullName:
                    type: string
                  status:
                    type: string
                    enum:
                      - pending
                      - active
                      - disabled
                  explicitWebauthnID:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
    patch:
      description: Updates a user
      operationId: UserUpdate
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                status:
                  type: string
                  enum:
                    - pending
                    - active
                    - disabled
      responses:
        '200':
          description: User has been updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - userID
                  - status
                properties:
                  userID:
                    type: string
                  fullName:
                    type: string
                  status:
                    type: string
                    enum:
                      - pending
                      - active
                      - disabled
                  explicitWebauthnID:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
    delete:
      description: Deletes a user
      operationId: UserDelete
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - httpStatusCode
                  - message
                  - requestData
                  - runtime
                properties:
                  httpStatusCode:
                    description: HTTP status code of operation
                    type: integer
                    format: int32
                  message:
                    type: string
                    example: OK
                  requestData:
                    description: Data about the request itself, can be used for debugging
                    type: object
                    required:
                      - requestID
                    properties:
                      requestID:
                        description: >-
                          Unique ID of request, you can provide your own while
                          making the request, if not the ID will be randomly
                          generated on server side
                        type: string
                        example: req-557...663
                      link:
                        description: Link to dashboard with details about request
                        type: string
                        example: >-
                          https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                  runtime:
                    description: Runtime in seconds for this request
                    type: number
                    format: float
                    example: 0.06167686
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/challenges:
    post:
      description: Create a new challenge to verify a login identifier
      operationId: ChallengeCreate
      tags:
        - Challenges
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - challengeType
                - identifierValue
                - clientInformation
              properties:
                challengeType:
                  type: string
                  enum:
                    - email_otp
                    - email_link
                    - sms_otp
                identifierValue:
                  type: string
                challengeMetadata:
                  type: object
                lifetimeSeconds:
                  type: integer
                clientInformation:
                  type: object
                  required:
                    - remoteAddress
                    - userAgent
                    - userVerifyingPlatformAuthenticatorAvailable
                    - conditionalMediationAvailable
                    - parsedDeviceInfo
                  properties:
                    remoteAddress:
                      description: Client's IP address
                      type: string
                      example: '::ffff:172.18.0.1'
                    userAgent:
                      description: Client's user agent
                      type: string
                      example: >-
                        Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0
                        Safari/537.36
                    clientEnvHandle:
                      description: Client's environment handle
                      type: string
                    javascriptFingerprint:
                      description: Client's fingerprint
                      type: string
                    javaScriptHighEntropy:
                      type: object
                      required:
                        - platform
                        - platformVersion
                        - mobile
                      properties:
                        platform:
                          type: string
                        platformVersion:
                          type: string
                        mobile:
                          type: boolean
                    bluetoothAvailable:
                      description: Client's Bluetooth availability
                      type: boolean
                    passwordManagerAvailable:
                      description: Client's password manager availability
                      type: boolean
                    userVerifyingPlatformAuthenticatorAvailable:
                      type: boolean
                    conditionalMediationAvailable:
                      type: boolean
                    privateMode:
                      type: boolean
                    parsedDeviceInfo:
                      type: object
                      required:
                        - browserName
                        - browserVersion
                        - osName
                        - osVersion
                      properties:
                        browserName:
                          type: string
                        browserVersion:
                          type: string
                        osName:
                          type: string
                        osVersion:
                          type: string
      responses:
        '200':
          description: Challenge has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - challengeID
                  - type
                  - identifierValue
                  - value
                  - expires
                  - status
                properties:
                  challengeID:
                    type: string
                  type:
                    type: string
                    enum:
                      - email_otp
                      - email_link
                      - sms_otp
                  identifierValue:
                    type: string
                  value:
                    type: string
                  expires:
                    type: integer
                    format: int64
                  status:
                    type: string
                    enum:
                      - pending
                      - completed
                      - expired
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/challenges/{challengeID}:
    patch:
      description: Updates a challenge (e.g. from pending to completed)
      operationId: ChallengeUpdate
      tags:
        - Challenges
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
        - name: challengeID
          in: path
          description: ID of challenge
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - value
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Challenge has been updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - challengeID
                  - type
                  - identifierValue
                  - value
                  - expires
                  - status
                properties:
                  challengeID:
                    type: string
                  type:
                    type: string
                    enum:
                      - email_otp
                      - email_link
                      - sms_otp
                  identifierValue:
                    type: string
                  value:
                    type: string
                  expires:
                    type: integer
                    format: int64
                  status:
                    type: string
                    enum:
                      - pending
                      - completed
                      - expired
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/identifiers:
    post:
      description: Create a new login identifier
      operationId: IdentifierCreate
      tags:
        - Identifiers
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identifierType
                - identifierValue
                - status
              properties:
                identifierType:
                  type: string
                  enum:
                    - email
                    - phone
                    - username
                identifierValue:
                  type: string
                status:
                  type: string
                  enum:
                    - pending
                    - primary
                    - verified
      responses:
        '200':
          description: Identifier has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - identifierID
                  - type
                  - value
                  - status
                  - userID
                properties:
                  identifierID:
                    type: string
                  type:
                    type: string
                    enum:
                      - email
                      - phone
                      - username
                  value:
                    type: string
                  status:
                    type: string
                    enum:
                      - pending
                      - primary
                      - verified
                  userID:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/identifiers/{identifierID}:
    delete:
      description: Delete an existing login identifier
      operationId: IdentifierDelete
      tags:
        - Identifiers
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
        - name: identifierID
          in: path
          description: ID of login identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - httpStatusCode
                  - message
                  - requestData
                  - runtime
                properties:
                  httpStatusCode:
                    description: HTTP status code of operation
                    type: integer
                    format: int32
                  message:
                    type: string
                    example: OK
                  requestData:
                    description: Data about the request itself, can be used for debugging
                    type: object
                    required:
                      - requestID
                    properties:
                      requestID:
                        description: >-
                          Unique ID of request, you can provide your own while
                          making the request, if not the ID will be randomly
                          generated on server side
                        type: string
                        example: req-557...663
                      link:
                        description: Link to dashboard with details about request
                        type: string
                        example: >-
                          https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                  runtime:
                    description: Runtime in seconds for this request
                    type: number
                    format: float
                    example: 0.06167686
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
    patch:
      description: Updates a login identifier (e.g. from pending to verified)
      operationId: IdentifierUpdate
      tags:
        - Identifiers
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
        - name: identifierID
          in: path
          description: ID of login identifier
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - pending
                    - primary
                    - verified
      responses:
        '200':
          description: Identifier has been updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - identifierID
                  - type
                  - value
                  - status
                  - userID
                properties:
                  identifierID:
                    type: string
                  type:
                    type: string
                    enum:
                      - email
                      - phone
                      - username
                  value:
                    type: string
                  status:
                    type: string
                    enum:
                      - pending
                      - primary
                      - verified
                  userID:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/socialAccounts:
    get:
      description: Returns a list of social accounts
      operationId: UserSocialAccountList
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: Field sorting
          required: false
          schema:
            type: string
        - name: filter[]
          in: query
          description: Field filtering
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          examples:
            filterEmail:
              summary: Filter for one email address
              value:
                - identifierType:eq:email
                - identifierValue:eq:mail@example.com
            filterTimepoint:
              summary: timePoint after 20/07/2021
              value:
                - timePoint:gt:2021-07-20T00:00:00
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of social accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - socialAccountID
                    - providerType
                    - identifierValue
                    - userID
                    - foreignID
                    - avatarURL
                    - fullName
                  properties:
                    socialAccountID:
                      type: string
                    providerType:
                      type: string
                    identifierValue:
                      type: string
                    userID:
                      type: string
                    foreignID:
                      type: string
                    avatarURL:
                      type: string
                    fullName:
                      type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
    post:
      description: Creates a new social account
      operationId: SocialAccountCreate
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - providerType
                - identifierValue
                - foreignID
                - avatarURL
                - fullName
              properties:
                providerType:
                  type: string
                  enum:
                    - google
                    - microsoft
                    - github
                identifierValue:
                  type: string
                foreignID:
                  type: string
                avatarURL:
                  type: string
                fullName:
                  type: string
      responses:
        '200':
          description: Social account has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - socialAccountID
                  - providerType
                  - identifierValue
                  - userID
                  - foreignID
                  - avatarURL
                  - fullName
                properties:
                  socialAccountID:
                    type: string
                  providerType:
                    type: string
                  identifierValue:
                    type: string
                  userID:
                    type: string
                  foreignID:
                    type: string
                  avatarURL:
                    type: string
                  fullName:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/credentials:
    get:
      description: Returns a list of credentials (passkeys)
      operationId: CredentialList
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
        - name: sort
          in: query
          description: Field sorting
          required: false
          schema:
            type: string
        - name: filter[]
          in: query
          description: Field filtering
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          examples:
            filterEmail:
              summary: Filter for one email address
              value:
                - identifierType:eq:email
                - identifierValue:eq:mail@example.com
            filterTimepoint:
              summary: timePoint after 20/07/2021
              value:
                - timePoint:gt:2021-07-20T00:00:00
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of credentials (passkeys)
          content:
            application/json:
              schema:
                type: object
                required:
                  - credentials
                  - paging
                properties:
                  credentials:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - credentialID
                        - attestationType
                        - transport
                        - backupEligible
                        - backupState
                        - authenticatorAAGUID
                        - aaguidDetails
                        - sourceOS
                        - sourceBrowser
                        - lastUsed
                        - lastUsedMs
                        - created
                        - createdMs
                        - status
                      properties:
                        id:
                          type: string
                          example: cre-12345
                        credentialID:
                          type: string
                        attestationType:
                          type: string
                        transport:
                          type: array
                          items:
                            type: string
                            enum:
                              - usb
                              - nfc
                              - ble
                              - internal
                              - hybrid
                              - smart-card
                        backupEligible:
                          type: boolean
                        backupState:
                          type: boolean
                        authenticatorAAGUID:
                          type: string
                        sourceOS:
                          type: string
                        sourceBrowser:
                          type: string
                        lastUsed:
                          type: string
                          description: >-
                            Timestamp of when the passkey was last used in
                            yyyy-MM-dd'T'HH:mm:ss format
                        lastUsedMs:
                          type: integer
                          format: int64
                        created:
                          description: >-
                            Timestamp of when the entity was created in
                            yyyy-MM-dd'T'HH:mm:ss format
                          type: string
                        createdMs:
                          type: integer
                          format: int64
                        status:
                          type: string
                          enum:
                            - pending
                            - active
                          description: Status
                        aaguidDetails:
                          type: object
                          required:
                            - aaguid
                            - name
                            - iconLight
                            - iconDark
                          properties:
                            aaguid:
                              type: string
                            name:
                              type: string
                            iconLight:
                              type: string
                            iconDark:
                              type: string
                  paging:
                    type: object
                    required:
                      - page
                      - totalPages
                      - totalItems
                    properties:
                      page:
                        description: current page returned in response
                        type: integer
                        default: 1
                      totalPages:
                        description: total number of pages available
                        type: integer
                      totalItems:
                        description: total number of items available
                        type: integer
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/credentials/{credentialID}:
    delete:
      description: Deletes an existing credential (passkey)
      operationId: CredentialDelete
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
        - name: credentialID
          in: path
          description: ID of credential
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - httpStatusCode
                  - message
                  - requestData
                  - runtime
                properties:
                  httpStatusCode:
                    description: HTTP status code of operation
                    type: integer
                    format: int32
                  message:
                    type: string
                    example: OK
                  requestData:
                    description: Data about the request itself, can be used for debugging
                    type: object
                    required:
                      - requestID
                    properties:
                      requestID:
                        description: >-
                          Unique ID of request, you can provide your own while
                          making the request, if not the ID will be randomly
                          generated on server side
                        type: string
                        example: req-557...663
                      link:
                        description: Link to dashboard with details about request
                        type: string
                        example: >-
                          https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                  runtime:
                    description: Runtime in seconds for this request
                    type: number
                    format: float
                    example: 0.06167686
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/authEvents:
    post:
      description: Create a new authentication event for a user
      operationId: AuthEventCreate
      tags:
        - AuthEvents
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - eventType
                - method
                - status
                - clientInformation
              properties:
                username:
                  type: string
                eventType:
                  type: string
                  enum:
                    - sign_up
                    - login
                    - new_passkey_added
                method:
                  type: string
                  enum:
                    - password
                    - email_otp
                    - email_link
                    - phone_otp
                    - passkey
                    - social_github
                    - social_google
                    - social_microsoft
                status:
                  type: string
                  enum:
                    - success
                    - failure
                clientInformation:
                  type: object
                  required:
                    - remoteAddress
                    - userAgent
                    - userVerifyingPlatformAuthenticatorAvailable
                    - conditionalMediationAvailable
                    - parsedDeviceInfo
                  properties:
                    remoteAddress:
                      description: Client's IP address
                      type: string
                      example: '::ffff:172.18.0.1'
                    userAgent:
                      description: Client's user agent
                      type: string
                      example: >-
                        Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0
                        Safari/537.36
                    clientEnvHandle:
                      description: Client's environment handle
                      type: string
                    javascriptFingerprint:
                      description: Client's fingerprint
                      type: string
                    javaScriptHighEntropy:
                      type: object
                      required:
                        - platform
                        - platformVersion
                        - mobile
                      properties:
                        platform:
                          type: string
                        platformVersion:
                          type: string
                        mobile:
                          type: boolean
                    bluetoothAvailable:
                      description: Client's Bluetooth availability
                      type: boolean
                    passwordManagerAvailable:
                      description: Client's password manager availability
                      type: boolean
                    userVerifyingPlatformAuthenticatorAvailable:
                      type: boolean
                    conditionalMediationAvailable:
                      type: boolean
                    privateMode:
                      type: boolean
                    parsedDeviceInfo:
                      type: object
                      required:
                        - browserName
                        - browserVersion
                        - osName
                        - osVersion
                      properties:
                        browserName:
                          type: string
                        browserVersion:
                          type: string
                        osName:
                          type: string
                        osVersion:
                          type: string
      responses:
        '200':
          description: Auth event has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - authEventID
                  - userID
                  - username
                  - eventType
                  - method
                  - created
                  - createdMs
                  - status
                properties:
                  authEventID:
                    type: string
                  userID:
                    description: ID of the user
                    type: string
                  username:
                    type: string
                  eventType:
                    type: string
                    enum:
                      - sign_up
                      - login
                      - new_passkey_added
                  method:
                    type: string
                    enum:
                      - password
                      - email_otp
                      - email_link
                      - phone_otp
                      - passkey
                      - social_github
                      - social_google
                      - social_microsoft
                  created:
                    description: >-
                      Timestamp of when the entity was created in
                      yyyy-MM-dd'T'HH:mm:ss format
                    type: string
                  createdMs:
                    type: integer
                    format: int64
                  status:
                    type: string
                    enum:
                      - success
                      - failure
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/passkeyEvents:
    post:
      description: Create a new passkey event for a user
      operationId: PasskeyEventCreate
      tags:
        - PasskeyEvents
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eventType
              properties:
                eventType:
                  type: string
                  enum:
                    - user-login-blacklisted
                    - login-explicit-abort
                    - login-error
                    - login-error-untyped
                    - login-one-tap-switch
                    - user-append-after-cross-platform-blacklisted
                    - user-append-after-login-error-blacklisted
                    - append-credential-exists
                    - append-explicit-abort
                    - append-error
                expires:
                  type: integer
                processID:
                  type: string
                clientEnvID:
                  type: string
                credentialID:
                  type: string
                challenge:
                  type: string
      responses:
        '200':
          description: Passkey event has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - passkeyEventID
                  - userID
                  - eventType
                  - created
                  - createdMs
                properties:
                  passkeyEventID:
                    type: string
                  userID:
                    description: ID of the user
                    type: string
                  eventType:
                    type: string
                    enum:
                      - user-login-blacklisted
                      - login-explicit-abort
                      - login-error
                      - login-error-untyped
                      - login-one-tap-switch
                      - user-append-after-cross-platform-blacklisted
                      - user-append-after-login-error-blacklisted
                      - append-credential-exists
                      - append-explicit-abort
                      - append-error
                  clientEnvID:
                    type: string
                  processID:
                    type: string
                  credentialID:
                    type: string
                  expires:
                    type: integer
                  created:
                    description: >-
                      Timestamp of when the entity was created in
                      yyyy-MM-dd'T'HH:mm:ss format
                    type: string
                  createdMs:
                    type: integer
                    format: int64
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
    get:
      description: Returns a list of matching passkey events
      operationId: PasskeyEventList
      tags:
        - PasskeyEvents
      security:
        - basicAuth: []
      parameters:
        - name: sort
          in: query
          description: Field sorting
          required: false
          schema:
            type: string
        - name: filter[]
          in: query
          description: Field filtering
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          examples:
            filterEmail:
              summary: Filter for one email address
              value:
                - identifierType:eq:email
                - identifierValue:eq:mail@example.com
            filterTimepoint:
              summary: timePoint after 20/07/2021
              value:
                - timePoint:gt:2021-07-20T00:00:00
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of all matching passkey events
          content:
            application/json:
              schema:
                type: object
                required:
                  - passkeyEvents
                  - paging
                properties:
                  passkeyEvents:
                    type: array
                    items:
                      type: object
                      required:
                        - passkeyEventID
                        - userID
                        - eventType
                        - created
                        - createdMs
                      properties:
                        passkeyEventID:
                          type: string
                        userID:
                          description: ID of the user
                          type: string
                        eventType:
                          type: string
                          enum:
                            - user-login-blacklisted
                            - login-explicit-abort
                            - login-error
                            - login-error-untyped
                            - login-one-tap-switch
                            - user-append-after-cross-platform-blacklisted
                            - user-append-after-login-error-blacklisted
                            - append-credential-exists
                            - append-explicit-abort
                            - append-error
                        clientEnvID:
                          type: string
                        processID:
                          type: string
                        credentialID:
                          type: string
                        expires:
                          type: integer
                        created:
                          description: >-
                            Timestamp of when the entity was created in
                            yyyy-MM-dd'T'HH:mm:ss format
                          type: string
                        createdMs:
                          type: integer
                          format: int64
                  paging:
                    type: object
                    required:
                      - page
                      - totalPages
                      - totalItems
                    properties:
                      page:
                        description: current page returned in response
                        type: integer
                        default: 1
                      totalPages:
                        description: total number of pages available
                        type: integer
                      totalItems:
                        description: total number of items available
                        type: integer
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/passkeyEvents/{passkeyEventID}:
    delete:
      description: Deletes an existing passkey event
      operationId: PasskeyEventDelete
      tags:
        - PasskeyEvents
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
        - name: passkeyEventID
          in: path
          description: ID of a passkey event
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - httpStatusCode
                  - message
                  - requestData
                  - runtime
                properties:
                  httpStatusCode:
                    description: HTTP status code of operation
                    type: integer
                    format: int32
                  message:
                    type: string
                    example: OK
                  requestData:
                    description: Data about the request itself, can be used for debugging
                    type: object
                    required:
                      - requestID
                    properties:
                      requestID:
                        description: >-
                          Unique ID of request, you can provide your own while
                          making the request, if not the ID will be randomly
                          generated on server side
                        type: string
                        example: req-557...663
                      link:
                        description: Link to dashboard with details about request
                        type: string
                        example: >-
                          https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                  runtime:
                    description: Runtime in seconds for this request
                    type: number
                    format: float
                    example: 0.06167686
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/passkeyChallenges:
    get:
      description: Returns a list of matching passkey challenges
      operationId: PasskeyChallengeList
      tags:
        - PasskeyChallenges
      security:
        - basicAuth: []
      parameters:
        - name: sort
          in: query
          description: Field sorting
          required: false
          schema:
            type: string
        - name: filter[]
          in: query
          description: Field filtering
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          examples:
            filterEmail:
              summary: Filter for one email address
              value:
                - identifierType:eq:email
                - identifierValue:eq:mail@example.com
            filterTimepoint:
              summary: timePoint after 20/07/2021
              value:
                - timePoint:gt:2021-07-20T00:00:00
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of all matching passkey challenges
          content:
            application/json:
              schema:
                type: object
                required:
                  - passkeyChallenges
                  - paging
                properties:
                  passkeyChallenges:
                    type: array
                    items:
                      type: object
                      required:
                        - challengeID
                        - type
                        - value
                        - status
                        - created
                        - createdMs
                        - expires
                      properties:
                        challengeID:
                          type: string
                        type:
                          type: string
                          enum:
                            - register
                            - authenticate
                        value:
                          type: string
                        status:
                          type: string
                          enum:
                            - pending
                            - completed
                            - consumed
                        created:
                          type: integer
                          format: int64
                        createdMs:
                          type: integer
                          format: int64
                        expires:
                          type: integer
                          format: int64
                  paging:
                    type: object
                    required:
                      - page
                      - totalPages
                      - totalItems
                    properties:
                      page:
                        description: current page returned in response
                        type: integer
                        default: 1
                      totalPages:
                        description: total number of pages available
                        type: integer
                      totalItems:
                        description: total number of items available
                        type: integer
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/passkeyChallenges/{passkeyChallengeID}:
    patch:
      description: Updates a passkey challenge
      operationId: PasskeyChallengeUpdate
      tags:
        - PasskeyChallenges
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
        - name: passkeyChallengeID
          in: path
          description: ID of a passkey challenge
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - pending
                    - completed
                    - consumed
      responses:
        '200':
          description: Passkey challenge has been updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - challengeID
                  - type
                  - value
                  - status
                  - created
                  - createdMs
                  - expires
                properties:
                  challengeID:
                    type: string
                  type:
                    type: string
                    enum:
                      - register
                      - authenticate
                  value:
                    type: string
                  status:
                    type: string
                    enum:
                      - pending
                      - completed
                      - consumed
                  created:
                    type: integer
                    format: int64
                  createdMs:
                    type: integer
                    format: int64
                  expires:
                    type: integer
                    format: int64
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/passwordManagers:
    get:
      description: Returns a list of password managers
      operationId: PasswordManagerList
      tags:
        - PasswordManagers
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of all matching password managers
          content:
            application/json:
              schema:
                type: object
                required:
                  - passwordManagers
                properties:
                  passwordManagers:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - userID
                        - clientEnvID
                        - credentialID
                        - aaguid
                        - status
                        - score
                        - createdMs
                      properties:
                        id:
                          type: string
                        userID:
                          type: string
                        clientEnvID:
                          type: string
                        credentialID:
                          type: string
                        aaguid:
                          type: string
                        status:
                          type: string
                        score:
                          type: integer
                        createdMs:
                          type: integer
                          format: int64
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /users/{userID}/clientEnvs:
    get:
      description: Returns a list of clientEnvs
      operationId: ClientEnvList
      tags:
        - ClientEnvs
      security:
        - basicAuth: []
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of all matching clientEnvs
          content:
            application/json:
              schema:
                type: object
                required:
                  - clientEnvs
                properties:
                  clientEnvs:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - handle
                        - browserName
                        - browserVersion
                        - osName
                        - osVersion
                        - userAgent
                        - jsFingerprint
                        - createdMs
                      properties:
                        id:
                          type: string
                        handle:
                          type: string
                        browserName:
                          type: string
                        browserVersion:
                          type: string
                        osName:
                          type: string
                        osVersion:
                          type: string
                        userAgent:
                          type: string
                        jsFingerprint:
                          type: string
                        createdMs:
                          type: integer
                          format: int64
                        deviceId:
                          type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /identifiers:
    get:
      description: Returns a list of matching identifiers
      operationId: IdentifierList
      tags:
        - Identifiers
      security:
        - basicAuth: []
      parameters:
        - name: sort
          in: query
          description: Field sorting
          required: false
          schema:
            type: string
        - name: filter[]
          in: query
          description: Field filtering
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          examples:
            filterEmail:
              summary: Filter for one email address
              value:
                - identifierType:eq:email
                - identifierValue:eq:mail@example.com
            filterTimepoint:
              summary: timePoint after 20/07/2021
              value:
                - timePoint:gt:2021-07-20T00:00:00
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of all matching identifiers
          content:
            application/json:
              schema:
                type: object
                required:
                  - identifiers
                  - paging
                properties:
                  identifiers:
                    type: array
                    items:
                      type: object
                      required:
                        - identifierID
                        - type
                        - value
                        - status
                        - userID
                      properties:
                        identifierID:
                          type: string
                        type:
                          type: string
                          enum:
                            - email
                            - phone
                            - username
                        value:
                          type: string
                        status:
                          type: string
                          enum:
                            - pending
                            - primary
                            - verified
                        userID:
                          type: string
                  paging:
                    type: object
                    required:
                      - page
                      - totalPages
                      - totalItems
                    properties:
                      page:
                        description: current page returned in response
                        type: integer
                        default: 1
                      totalPages:
                        description: total number of pages available
                        type: integer
                      totalItems:
                        description: total number of items available
                        type: integer
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /socialAccounts:
    get:
      description: Returns a list of social accounts
      operationId: SocialAccountList
      tags:
        - Users
      security:
        - basicAuth: []
      parameters:
        - name: sort
          in: query
          description: Field sorting
          required: false
          schema:
            type: string
        - name: filter[]
          in: query
          description: Field filtering
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          examples:
            filterEmail:
              summary: Filter for one email address
              value:
                - identifierType:eq:email
                - identifierValue:eq:mail@example.com
            filterTimepoint:
              summary: timePoint after 20/07/2021
              value:
                - timePoint:gt:2021-07-20T00:00:00
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of social accounts
          content:
            application/json:
              schema:
                type: object
                required:
                  - socialAccounts
                  - paging
                properties:
                  socialAccounts:
                    type: array
                    items:
                      type: object
                      required:
                        - socialAccountID
                        - providerType
                        - identifierValue
                        - userID
                        - foreignID
                        - avatarURL
                        - fullName
                      properties:
                        socialAccountID:
                          type: string
                        providerType:
                          type: string
                        identifierValue:
                          type: string
                        userID:
                          type: string
                        foreignID:
                          type: string
                        avatarURL:
                          type: string
                        fullName:
                          type: string
                  paging:
                    type: object
                    required:
                      - page
                      - totalPages
                      - totalItems
                    properties:
                      page:
                        description: current page returned in response
                        type: integer
                        default: 1
                      totalPages:
                        description: total number of pages available
                        type: integer
                      totalItems:
                        description: total number of items available
                        type: integer
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /projectConfig/cname:
    put:
      description: Update project config CNAME and generates new SSL certificate
      operationId: ProjectConfigUpdateCNAME
      tags:
        - ProjectConfig
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - cname
              properties:
                cname:
                  type: string
      responses:
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - httpStatusCode
                  - message
                  - requestData
                  - runtime
                properties:
                  httpStatusCode:
                    description: HTTP status code of operation
                    type: integer
                    format: int32
                  message:
                    type: string
                    example: OK
                  requestData:
                    description: Data about the request itself, can be used for debugging
                    type: object
                    required:
                      - requestID
                    properties:
                      requestID:
                        description: >-
                          Unique ID of request, you can provide your own while
                          making the request, if not the ID will be randomly
                          generated on server side
                        type: string
                        example: req-557...663
                      link:
                        description: Link to dashboard with details about request
                        type: string
                        example: >-
                          https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                  runtime:
                    description: Runtime in seconds for this request
                    type: number
                    format: float
                    example: 0.06167686
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /connectTokens:
    post:
      description: Create a new connect token
      operationId: ConnectTokenCreate
      tags:
        - ConnectTokens
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - data
              properties:
                type:
                  type: string
                  enum:
                    - passkey-append
                    - passkey-delete
                    - passkey-list
                    - passkey-login
                data:
                  type: object
                  oneOf:
                    - type: object
                      required:
                        - displayName
                        - identifier
                      properties:
                        displayName:
                          type: string
                        identifier:
                          type: string
                    - type: object
                      required:
                        - identifier
                      properties:
                        identifier:
                          type: string
                    - type: object
                      required:
                        - identifier
                      properties:
                        identifier:
                          type: string
                    - type: object
                      required:
                        - identifier
                      properties:
                        identifier:
                          type: string
                maxLifetimeInSeconds:
                  type: integer
                  example: 3600
      responses:
        '200':
          description: Connect token has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - tokenType
                  - data
                  - connectTokenStatus
                  - expires
                properties:
                  id:
                    type: string
                  tokenType:
                    type: string
                    enum:
                      - passkey-append
                      - passkey-delete
                      - passkey-list
                      - passkey-login
                  data:
                    type: object
                    oneOf:
                      - type: object
                        required:
                          - displayName
                          - identifier
                        properties:
                          displayName:
                            type: string
                          identifier:
                            type: string
                      - type: object
                        required:
                          - identifier
                        properties:
                          identifier:
                            type: string
                      - type: object
                        required:
                          - identifier
                        properties:
                          identifier:
                            type: string
                      - type: object
                        required:
                          - identifier
                        properties:
                          identifier:
                            type: string
                  connectTokenStatus:
                    type: string
                    enum:
                      - initial
                      - consumed
                  secret:
                    type: string
                  expires:
                    type: integer
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
    get:
      description: Returns a list of matching append tokens
      operationId: ConnectTokenList
      tags:
        - ConnectTokens
      security:
        - basicAuth: []
      parameters:
        - name: sort
          in: query
          description: Field sorting
          required: false
          schema:
            type: string
        - name: filter[]
          in: query
          description: Field filtering
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          examples:
            filterEmail:
              summary: Filter for one email address
              value:
                - identifierType:eq:email
                - identifierValue:eq:mail@example.com
            filterTimepoint:
              summary: timePoint after 20/07/2021
              value:
                - timePoint:gt:2021-07-20T00:00:00
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of all matching append tokens
          content:
            application/json:
              schema:
                type: object
                required:
                  - connectTokens
                  - paging
                properties:
                  connectTokens:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - tokenType
                        - data
                        - connectTokenStatus
                        - expires
                      properties:
                        id:
                          type: string
                        tokenType:
                          type: string
                          enum:
                            - passkey-append
                            - passkey-delete
                            - passkey-list
                            - passkey-login
                        data:
                          type: object
                          oneOf:
                            - type: object
                              required:
                                - displayName
                                - identifier
                              properties:
                                displayName:
                                  type: string
                                identifier:
                                  type: string
                            - type: object
                              required:
                                - identifier
                              properties:
                                identifier:
                                  type: string
                            - type: object
                              required:
                                - identifier
                              properties:
                                identifier:
                                  type: string
                            - type: object
                              required:
                                - identifier
                              properties:
                                identifier:
                                  type: string
                        connectTokenStatus:
                          type: string
                          enum:
                            - initial
                            - consumed
                        secret:
                          type: string
                        expires:
                          type: integer
                  paging:
                    type: object
                    required:
                      - page
                      - totalPages
                      - totalItems
                    properties:
                      page:
                        description: current page returned in response
                        type: integer
                        default: 1
                      totalPages:
                        description: total number of pages available
                        type: integer
                      totalItems:
                        description: total number of items available
                        type: integer
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /connectTokens/{connectTokenID}:
    patch:
      description: Updates an existing append token
      operationId: ConnectTokenUpdate
      tags:
        - ConnectTokens
      security:
        - basicAuth: []
      parameters:
        - name: connectTokenID
          in: path
          description: ID of an append token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - initial
                    - consumed
      responses:
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - httpStatusCode
                  - message
                  - requestData
                  - runtime
                properties:
                  httpStatusCode:
                    description: HTTP status code of operation
                    type: integer
                    format: int32
                  message:
                    type: string
                    example: OK
                  requestData:
                    description: Data about the request itself, can be used for debugging
                    type: object
                    required:
                      - requestID
                    properties:
                      requestID:
                        description: >-
                          Unique ID of request, you can provide your own while
                          making the request, if not the ID will be randomly
                          generated on server side
                        type: string
                        example: req-557...663
                      link:
                        description: Link to dashboard with details about request
                        type: string
                        example: >-
                          https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                  runtime:
                    description: Runtime in seconds for this request
                    type: number
                    format: float
                    example: 0.06167686
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
    delete:
      description: Deletes an existing append token
      operationId: ConnectTokenDelete
      tags:
        - ConnectTokens
      security:
        - basicAuth: []
      parameters:
        - name: connectTokenID
          in: path
          description: ID of an append token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - httpStatusCode
                  - message
                  - requestData
                  - runtime
                properties:
                  httpStatusCode:
                    description: HTTP status code of operation
                    type: integer
                    format: int32
                  message:
                    type: string
                    example: OK
                  requestData:
                    description: Data about the request itself, can be used for debugging
                    type: object
                    required:
                      - requestID
                    properties:
                      requestID:
                        description: >-
                          Unique ID of request, you can provide your own while
                          making the request, if not the ID will be randomly
                          generated on server side
                        type: string
                        example: req-557...663
                      link:
                        description: Link to dashboard with details about request
                        type: string
                        example: >-
                          https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                  runtime:
                    description: Runtime in seconds for this request
                    type: number
                    format: float
                    example: 0.06167686
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /webhookEndpoints:
    get:
      description: Returns a list of webhook endpoints
      operationId: WebhookEndpointList
      tags:
        - WebhookEndpoints
      security:
        - basicAuth: []
      responses:
        '200':
          description: List of webhook endpoints
          content:
            application/json:
              schema:
                type: object
                required:
                  - webhookEndpoints
                properties:
                  webhookEndpoints:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - url
                        - basicAuthUsername
                        - basicAuthPassword
                        - customHeaders
                        - subscribedEvents
                        - created
                        - createdMs
                        - updated
                        - updatedMs
                      properties:
                        id:
                          type: string
                        url:
                          type: string
                        basicAuthUsername:
                          type: string
                        basicAuthPassword:
                          type: string
                        customHeaders:
                          type: object
                        subscribedEvents:
                          type: array
                          items:
                            type: string
                            enum:
                              - passkey-login.completed
                              - passkey.created
                              - passkey.deleted
                              - user.created
                              - user.updated
                              - user.deleted
                        created:
                          type: string
                        createdMs:
                          type: integer
                          format: int64
                        updated:
                          type: string
                        updatedMs:
                          type: integer
                          format: int64
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
    post:
      description: Creates a new webhook endpoint
      operationId: WebhookEndpointCreate
      tags:
        - WebhookEndpoints
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
                - subscribedEvents
                - customHeaders
              properties:
                url:
                  type: string
                basicAuthUsername:
                  type: string
                basicAuthPassword:
                  type: string
                subscribedEvents:
                  type: array
                  items:
                    type: string
                    enum:
                      - passkey-login.completed
                      - passkey.created
                      - passkey.deleted
                      - user.created
                      - user.updated
                      - user.deleted
                customHeaders:
                  type: object
      responses:
        '200':
          description: Webhook endpoint has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - url
                  - basicAuthUsername
                  - basicAuthPassword
                  - customHeaders
                  - subscribedEvents
                  - created
                  - createdMs
                  - updated
                  - updatedMs
                properties:
                  id:
                    type: string
                  url:
                    type: string
                  basicAuthUsername:
                    type: string
                  basicAuthPassword:
                    type: string
                  customHeaders:
                    type: object
                  subscribedEvents:
                    type: array
                    items:
                      type: string
                      enum:
                        - passkey-login.completed
                        - passkey.created
                        - passkey.deleted
                        - user.created
                        - user.updated
                        - user.deleted
                  created:
                    type: string
                  createdMs:
                    type: integer
                    format: int64
                  updated:
                    type: string
                  updatedMs:
                    type: integer
                    format: int64
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /webhookEndpoints/{webhookEndpointID}:
    put:
      description: Updates an existing webhook endpoint
      operationId: WebhookEndpointUpdate
      tags:
        - WebhookEndpoints
      security:
        - basicAuth: []
      parameters:
        - name: webhookEndpointID
          in: path
          description: ID of a webhook endpoint
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                basicAuthUsername:
                  type: string
                basicAuthPassword:
                  type: string
                subscribedEvents:
                  type: array
                  items:
                    type: string
                    enum:
                      - passkey-login.completed
                      - passkey.created
                      - passkey.deleted
                      - user.created
                      - user.updated
                      - user.deleted
                customHeaders:
                  type: object
      responses:
        '200':
          description: Webhook endpoint has been updated
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - url
                  - basicAuthUsername
                  - basicAuthPassword
                  - customHeaders
                  - subscribedEvents
                  - created
                  - createdMs
                  - updated
                  - updatedMs
                properties:
                  id:
                    type: string
                  url:
                    type: string
                  basicAuthUsername:
                    type: string
                  basicAuthPassword:
                    type: string
                  customHeaders:
                    type: object
                  subscribedEvents:
                    type: array
                    items:
                      type: string
                      enum:
                        - passkey-login.completed
                        - passkey.created
                        - passkey.deleted
                        - user.created
                        - user.updated
                        - user.deleted
                  created:
                    type: string
                  createdMs:
                    type: integer
                    format: int64
                  updated:
                    type: string
                  updatedMs:
                    type: integer
                    format: int64
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
    delete:
      description: Deletes an existing webhook endpoint
      operationId: WebhookEndpointDelete
      tags:
        - WebhookEndpoints
      security:
        - basicAuth: []
      parameters:
        - name: webhookEndpointID
          in: path
          description: ID of a webhook endpoint
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - httpStatusCode
                  - message
                  - requestData
                  - runtime
                properties:
                  httpStatusCode:
                    description: HTTP status code of operation
                    type: integer
                    format: int32
                  message:
                    type: string
                    example: OK
                  requestData:
                    description: Data about the request itself, can be used for debugging
                    type: object
                    required:
                      - requestID
                    properties:
                      requestID:
                        description: >-
                          Unique ID of request, you can provide your own while
                          making the request, if not the ID will be randomly
                          generated on server side
                        type: string
                        example: req-557...663
                      link:
                        description: Link to dashboard with details about request
                        type: string
                        example: >-
                          https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                  runtime:
                    description: Runtime in seconds for this request
                    type: number
                    format: float
                    example: 0.06167686
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /sessions:
    get:
      description: Returns a list of matching sessions
      operationId: SessionList
      tags:
        - Sessions
      security:
        - basicAuth: []
      parameters:
        - name: sort
          in: query
          description: Field sorting
          required: false
          schema:
            type: string
        - name: filter[]
          in: query
          description: Field filtering
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          examples:
            filterEmail:
              summary: Filter for one email address
              value:
                - identifierType:eq:email
                - identifierValue:eq:mail@example.com
            filterTimepoint:
              summary: timePoint after 20/07/2021
              value:
                - timePoint:gt:2021-07-20T00:00:00
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of all matching sessions
          content:
            application/json:
              schema:
                type: object
                required:
                  - sessions
                  - paging
                properties:
                  sessions:
                    type: array
                    items:
                      type: object
                      required:
                        - sessionID
                        - userID
                        - identifierValue
                        - createdMs
                        - lastActionMs
                        - expiresMs
                        - status
                      properties:
                        sessionID:
                          type: string
                        userID:
                          type: string
                        identifierValue:
                          type: string
                        createdMs:
                          type: integer
                          format: int64
                        lastActionMs:
                          type: integer
                          format: int64
                        expiresMs:
                          type: integer
                          format: int64
                        status:
                          type: string
                          enum:
                            - active
                            - logged_out
                            - expired
                            - inactivity_reached
                            - revoked
                  paging:
                    type: object
                    required:
                      - page
                      - totalPages
                      - totalItems
                    properties:
                      page:
                        description: current page returned in response
                        type: integer
                        default: 1
                      totalPages:
                        description: total number of pages available
                        type: integer
                      totalItems:
                        description: total number of items available
                        type: integer
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /sessions/{sessionID}/revoke:
    post:
      description: Revokes an existing session
      operationId: SessionRevoke
      tags:
        - Sessions
      security:
        - basicAuth: []
      parameters:
        - name: sessionID
          in: path
          description: ID of session
          required: true
          schema:
            type: string
            minLength: 30
            maxLength: 30
      responses:
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - httpStatusCode
                  - message
                  - requestData
                  - runtime
                properties:
                  httpStatusCode:
                    description: HTTP status code of operation
                    type: integer
                    format: int32
                  message:
                    type: string
                    example: OK
                  requestData:
                    description: Data about the request itself, can be used for debugging
                    type: object
                    required:
                      - requestID
                    properties:
                      requestID:
                        description: >-
                          Unique ID of request, you can provide your own while
                          making the request, if not the ID will be randomly
                          generated on server side
                        type: string
                        example: req-557...663
                      link:
                        description: Link to dashboard with details about request
                        type: string
                        example: >-
                          https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                  runtime:
                    description: Runtime in seconds for this request
                    type: number
                    format: float
                    example: 0.06167686
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /passkey/append/start:
    post:
      description: Starts a challenge for creating a new passkey
      operationId: PasskeyAppendStart
      tags:
        - Passkeys
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userID
                - processID
                - username
                - clientInformation
                - passkeyIntelFlags
              properties:
                userID:
                  description: ID of the user
                  type: string
                processID:
                  type: string
                username:
                  type: string
                clientInformation:
                  type: object
                  required:
                    - remoteAddress
                    - userAgent
                    - userVerifyingPlatformAuthenticatorAvailable
                    - conditionalMediationAvailable
                    - parsedDeviceInfo
                  properties:
                    remoteAddress:
                      description: Client's IP address
                      type: string
                      example: '::ffff:172.18.0.1'
                    userAgent:
                      description: Client's user agent
                      type: string
                      example: >-
                        Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0
                        Safari/537.36
                    clientEnvHandle:
                      description: Client's environment handle
                      type: string
                    javascriptFingerprint:
                      description: Client's fingerprint
                      type: string
                    javaScriptHighEntropy:
                      type: object
                      required:
                        - platform
                        - platformVersion
                        - mobile
                      properties:
                        platform:
                          type: string
                        platformVersion:
                          type: string
                        mobile:
                          type: boolean
                    bluetoothAvailable:
                      description: Client's Bluetooth availability
                      type: boolean
                    passwordManagerAvailable:
                      description: Client's password manager availability
                      type: boolean
                    userVerifyingPlatformAuthenticatorAvailable:
                      type: boolean
                    conditionalMediationAvailable:
                      type: boolean
                    privateMode:
                      type: boolean
                    parsedDeviceInfo:
                      type: object
                      required:
                        - browserName
                        - browserVersion
                        - osName
                        - osVersion
                      properties:
                        browserName:
                          type: string
                        browserVersion:
                          type: string
                        osName:
                          type: string
                        osVersion:
                          type: string
                passkeyIntelFlags:
                  type: object
                  required:
                    - forcePasskeyAppend
                  properties:
                    forcePasskeyAppend:
                      type: boolean
                    askForAutoAppend:
                      type: boolean
      responses:
        '200':
          description: Passkey append challenge has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - appendAllow
                  - attestationOptions
                  - detectionInsights
                  - decisionInsights
                properties:
                  appendAllow:
                    type: boolean
                  attestationOptions:
                    type: string
                    example: >-
                      {"publicKey":{"challenge":"2m6...0w9/MgW...KE=","rp":{"name":"demo","id":"localhost"},"user":{"name":"example@mail.com","id":"dXN...zk5"},"pubKeyCredParams":[{"type":"public-key","alg":-7},{"type":"public-key","alg":-35},{"type":"public-key","alg":-36},{"type":"public-key","alg":-257},{"type":"public-key","alg":-258},{"type":"public-key","alg":-259},{"type":"public-key","alg":-37},{"type":"public-key","alg":-38},{"type":"public-key","alg":-39},{"type":"public-key","alg":-8}],"authenticatorSelection":{"authenticatorAttachment":"platform","requireResidentKey":false,"userVerification":"required"},"timeout":60000,"attestation":"none"}}
                  detectionInsights:
                    type: object
                    required:
                      - tags
                      - credentialIds
                      - clientEnvIds
                      - isCDACandidate
                      - passwordManagerIds
                      - historyData
                    properties:
                      tags:
                        type: array
                        items:
                          type: object
                          required:
                            - category
                            - name
                          properties:
                            category:
                              type: string
                              enum:
                                - support
                                - clientEnv
                                - history
                                - passkey
                            name:
                              type: string
                      credentialIds:
                        type: array
                        items:
                          type: string
                      clientEnvIds:
                        type: array
                        items:
                          type: string
                      passwordManagerIds:
                        type: array
                        items:
                          type: string
                      historyData:
                        type: object
                        required:
                          - defaultCount
                          - afterErrorCount
                          - afterHybridCount
                          - autoCount
                          - defaultCooldown
                          - afterErrorCooldown
                          - afterHybridCooldown
                          - autoCooldown
                        properties:
                          defaultCount:
                            type: integer
                          afterErrorCount:
                            type: integer
                          afterHybridCount:
                            type: integer
                          autoCount:
                            type: integer
                          defaultCooldown:
                            type: boolean
                          afterErrorCooldown:
                            type: boolean
                          afterHybridCooldown:
                            type: boolean
                          autoCooldown:
                            type: boolean
                  decisionInsights:
                    type: object
                    required:
                      - tag
                      - isRestrictedBrowser
                      - variant
                      - auto
                    properties:
                      tag:
                        type: string
                        enum:
                          - env-no-platform-pk-support
                          - env-no-pk-support
                          - user-no-pks
                          - user-login-blacklisted
                          - user-security-key
                          - user-positive-env-history
                          - user-negative-env-history
                          - env-blacklisted
                          - user-platform-pk-high-confidence
                          - user-cross-platform-pk-high-confidence
                          - user-env-no-pks
                          - default-deny
                          - passkey-list-initiated-process
                          - user-append-blacklisted
                          - process-pk-login-sk-completed
                          - process-pk-login-platform-completed
                          - process-pk-login-not-offered
                          - process-pk-login-incomplete
                          - process-pk-login-cross-platform-completed
                          - device-local-platform-passkey-experiment
                          - env-broken
                          - process-pk-login-aborted
                      isRestrictedBrowser:
                        type: boolean
                      variant:
                        type: string
                        enum:
                          - default
                          - after-error
                          - after-hybrid
                          - passkey-list
                      auto:
                        type: boolean
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /passkey/append/finish:
    post:
      description: Completes a challenge for creating a new passkey
      operationId: PasskeyAppendFinish
      tags:
        - Passkeys
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userID
                - processID
                - attestationResponse
                - clientInformation
              properties:
                userID:
                  description: ID of the user
                  type: string
                processID:
                  type: string
                attestationResponse:
                  type: string
                  example: >-
                    {"type":"public-key","id":"JM6...J_Q","rawId":"JM6...J_Q","authenticatorAttachment":null,"response":{"clientDataJSON":"eyJ...ZX0","authenticatorData":"SZY...AAQ","signature":"Ni7...YAg","userHandle":"dXN...zk5"},"clientExtensionResults":{}}
                clientInformation:
                  type: object
                  required:
                    - remoteAddress
                    - userAgent
                    - userVerifyingPlatformAuthenticatorAvailable
                    - conditionalMediationAvailable
                    - parsedDeviceInfo
                  properties:
                    remoteAddress:
                      description: Client's IP address
                      type: string
                      example: '::ffff:172.18.0.1'
                    userAgent:
                      description: Client's user agent
                      type: string
                      example: >-
                        Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0
                        Safari/537.36
                    clientEnvHandle:
                      description: Client's environment handle
                      type: string
                    javascriptFingerprint:
                      description: Client's fingerprint
                      type: string
                    javaScriptHighEntropy:
                      type: object
                      required:
                        - platform
                        - platformVersion
                        - mobile
                      properties:
                        platform:
                          type: string
                        platformVersion:
                          type: string
                        mobile:
                          type: boolean
                    bluetoothAvailable:
                      description: Client's Bluetooth availability
                      type: boolean
                    passwordManagerAvailable:
                      description: Client's password manager availability
                      type: boolean
                    userVerifyingPlatformAuthenticatorAvailable:
                      type: boolean
                    conditionalMediationAvailable:
                      type: boolean
                    privateMode:
                      type: boolean
                    parsedDeviceInfo:
                      type: object
                      required:
                        - browserName
                        - browserVersion
                        - osName
                        - osVersion
                      properties:
                        browserName:
                          type: string
                        browserVersion:
                          type: string
                        osName:
                          type: string
                        osVersion:
                          type: string
                sendNotification:
                  type: boolean
      responses:
        '200':
          description: Passkey append succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - passkeyData
                properties:
                  passkeyData:
                    type: object
                    required:
                      - id
                      - userID
                      - username
                      - ceremonyType
                      - challengeID
                      - aaguidDetails
                    properties:
                      id:
                        type: string
                      userID:
                        type: string
                      username:
                        type: string
                      ceremonyType:
                        type: string
                        enum:
                          - local
                          - cda
                          - security-key
                      challengeID:
                        type: string
                      aaguidDetails:
                        type: object
                        required:
                          - aaguid
                          - name
                          - iconLight
                          - iconDark
                        properties:
                          aaguid:
                            type: string
                          name:
                            type: string
                          iconLight:
                            type: string
                          iconDark:
                            type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /passkey/login/start:
    post:
      description: Starts a challenge for an existing passkey
      operationId: PasskeyLoginStart
      tags:
        - Passkeys
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userID
                - clientInformation
                - crossDeviceAuthenticationStrategy
                - processID
              properties:
                userID:
                  description: ID of the user
                  type: string
                clientInformation:
                  type: object
                  required:
                    - remoteAddress
                    - userAgent
                    - userVerifyingPlatformAuthenticatorAvailable
                    - conditionalMediationAvailable
                    - parsedDeviceInfo
                  properties:
                    remoteAddress:
                      description: Client's IP address
                      type: string
                      example: '::ffff:172.18.0.1'
                    userAgent:
                      description: Client's user agent
                      type: string
                      example: >-
                        Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0
                        Safari/537.36
                    clientEnvHandle:
                      description: Client's environment handle
                      type: string
                    javascriptFingerprint:
                      description: Client's fingerprint
                      type: string
                    javaScriptHighEntropy:
                      type: object
                      required:
                        - platform
                        - platformVersion
                        - mobile
                      properties:
                        platform:
                          type: string
                        platformVersion:
                          type: string
                        mobile:
                          type: boolean
                    bluetoothAvailable:
                      description: Client's Bluetooth availability
                      type: boolean
                    passwordManagerAvailable:
                      description: Client's password manager availability
                      type: boolean
                    userVerifyingPlatformAuthenticatorAvailable:
                      type: boolean
                    conditionalMediationAvailable:
                      type: boolean
                    privateMode:
                      type: boolean
                    parsedDeviceInfo:
                      type: object
                      required:
                        - browserName
                        - browserVersion
                        - osName
                        - osVersion
                      properties:
                        browserName:
                          type: string
                        browserVersion:
                          type: string
                        osName:
                          type: string
                        osVersion:
                          type: string
                crossDeviceAuthenticationStrategy:
                  type: string
                  enum:
                    - standard
                    - minimize
                    - maximize
                processID:
                  type: string
      responses:
        '200':
          description: Passkey login challenge has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - loginAllow
                  - assertionOptions
                  - detectionInsights
                  - decisionInsights
                properties:
                  loginAllow:
                    type: boolean
                  assertionOptions:
                    type: string
                  detectionInsights:
                    type: object
                    required:
                      - tags
                      - credentialIds
                      - clientEnvIds
                      - isCDACandidate
                      - passwordManagerIds
                      - historyData
                    properties:
                      tags:
                        type: array
                        items:
                          type: object
                          required:
                            - category
                            - name
                          properties:
                            category:
                              type: string
                              enum:
                                - support
                                - clientEnv
                                - history
                                - passkey
                            name:
                              type: string
                      credentialIds:
                        type: array
                        items:
                          type: string
                      clientEnvIds:
                        type: array
                        items:
                          type: string
                      passwordManagerIds:
                        type: array
                        items:
                          type: string
                      historyData:
                        type: object
                        required:
                          - defaultCount
                          - afterErrorCount
                          - afterHybridCount
                          - autoCount
                          - defaultCooldown
                          - afterErrorCooldown
                          - afterHybridCooldown
                          - autoCooldown
                        properties:
                          defaultCount:
                            type: integer
                          afterErrorCount:
                            type: integer
                          afterHybridCount:
                            type: integer
                          autoCount:
                            type: integer
                          defaultCooldown:
                            type: boolean
                          afterErrorCooldown:
                            type: boolean
                          afterHybridCooldown:
                            type: boolean
                          autoCooldown:
                            type: boolean
                  decisionInsights:
                    type: object
                    required:
                      - tag
                      - isCDACandidate
                      - experiments
                    properties:
                      tag:
                        type: string
                        enum:
                          - env-no-platform-pk-support
                          - env-no-pk-support
                          - user-no-pks
                          - user-login-blacklisted
                          - user-security-key
                          - user-positive-env-history
                          - user-negative-env-history
                          - env-blacklisted
                          - user-platform-pk-high-confidence
                          - user-cross-platform-pk-high-confidence
                          - user-env-no-pks
                          - default-deny
                          - passkey-list-initiated-process
                          - user-append-blacklisted
                          - process-pk-login-sk-completed
                          - process-pk-login-platform-completed
                          - process-pk-login-not-offered
                          - process-pk-login-incomplete
                          - process-pk-login-cross-platform-completed
                          - device-local-platform-passkey-experiment
                          - env-broken
                          - process-pk-login-aborted
                      isCDACandidate:
                        type: boolean
                      experiments:
                        type: array
                        items:
                          type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /passkey/login/finish:
    post:
      description: Completes a challenge for an existing passkey
      operationId: PasskeyLoginFinish
      tags:
        - Passkeys
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userID
                - assertionResponse
                - clientInformation
                - processID
              properties:
                userID:
                  description: ID of the user
                  type: string
                assertionResponse:
                  type: string
                clientInformation:
                  type: object
                  required:
                    - remoteAddress
                    - userAgent
                    - userVerifyingPlatformAuthenticatorAvailable
                    - conditionalMediationAvailable
                    - parsedDeviceInfo
                  properties:
                    remoteAddress:
                      description: Client's IP address
                      type: string
                      example: '::ffff:172.18.0.1'
                    userAgent:
                      description: Client's user agent
                      type: string
                      example: >-
                        Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0
                        Safari/537.36
                    clientEnvHandle:
                      description: Client's environment handle
                      type: string
                    javascriptFingerprint:
                      description: Client's fingerprint
                      type: string
                    javaScriptHighEntropy:
                      type: object
                      required:
                        - platform
                        - platformVersion
                        - mobile
                      properties:
                        platform:
                          type: string
                        platformVersion:
                          type: string
                        mobile:
                          type: boolean
                    bluetoothAvailable:
                      description: Client's Bluetooth availability
                      type: boolean
                    passwordManagerAvailable:
                      description: Client's password manager availability
                      type: boolean
                    userVerifyingPlatformAuthenticatorAvailable:
                      type: boolean
                    conditionalMediationAvailable:
                      type: boolean
                    privateMode:
                      type: boolean
                    parsedDeviceInfo:
                      type: object
                      required:
                        - browserName
                        - browserVersion
                        - osName
                        - osVersion
                      properties:
                        browserName:
                          type: string
                        browserVersion:
                          type: string
                        osName:
                          type: string
                        osVersion:
                          type: string
                processID:
                  type: string
                signPasskeyData:
                  type: boolean
      responses:
        '200':
          description: Passkey login succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - passkeyData
                properties:
                  passkeyData:
                    type: object
                    required:
                      - id
                      - userID
                      - username
                      - ceremonyType
                      - challengeID
                      - aaguidDetails
                    properties:
                      id:
                        type: string
                      userID:
                        type: string
                      username:
                        type: string
                      ceremonyType:
                        type: string
                        enum:
                          - local
                          - cda
                          - security-key
                      challengeID:
                        type: string
                      aaguidDetails:
                        type: object
                        required:
                          - aaguid
                          - name
                          - iconLight
                          - iconDark
                        properties:
                          aaguid:
                            type: string
                          name:
                            type: string
                          iconLight:
                            type: string
                          iconDark:
                            type: string
                  signedPasskeyData:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /passkey/postLogin:
    post:
      description: Explicitly runs the post-login action
      operationId: PasskeyPostLogin
      tags:
        - Passkeys
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - signedPasskeyData
              properties:
                signedPasskeyData:
                  type: string
      responses:
        '200':
          description: Post Passkey Login succeeded
          content:
            application/json:
              schema:
                type: object
                required:
                  - session
                properties:
                  session:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /passkey/mediation/start:
    post:
      description: Starts a challenge for an existing passkey (Conditional UI)
      operationId: PasskeyMediationStart
      tags:
        - Passkeys
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - clientInformation
              properties:
                clientInformation:
                  type: object
                  required:
                    - remoteAddress
                    - userAgent
                    - userVerifyingPlatformAuthenticatorAvailable
                    - conditionalMediationAvailable
                    - parsedDeviceInfo
                  properties:
                    remoteAddress:
                      description: Client's IP address
                      type: string
                      example: '::ffff:172.18.0.1'
                    userAgent:
                      description: Client's user agent
                      type: string
                      example: >-
                        Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0
                        Safari/537.36
                    clientEnvHandle:
                      description: Client's environment handle
                      type: string
                    javascriptFingerprint:
                      description: Client's fingerprint
                      type: string
                    javaScriptHighEntropy:
                      type: object
                      required:
                        - platform
                        - platformVersion
                        - mobile
                      properties:
                        platform:
                          type: string
                        platformVersion:
                          type: string
                        mobile:
                          type: boolean
                    bluetoothAvailable:
                      description: Client's Bluetooth availability
                      type: boolean
                    passwordManagerAvailable:
                      description: Client's password manager availability
                      type: boolean
                    userVerifyingPlatformAuthenticatorAvailable:
                      type: boolean
                    conditionalMediationAvailable:
                      type: boolean
                    privateMode:
                      type: boolean
                    parsedDeviceInfo:
                      type: object
                      required:
                        - browserName
                        - browserVersion
                        - osName
                        - osVersion
                      properties:
                        browserName:
                          type: string
                        browserVersion:
                          type: string
                        osName:
                          type: string
                        osVersion:
                          type: string
      responses:
        '200':
          description: Passkey login challenge has been created
          content:
            application/json:
              schema:
                type: object
                required:
                  - loginAllow
                  - assertionOptions
                properties:
                  loginAllow:
                    type: boolean
                  assertionOptions:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
  /passkey/mediation/finish:
    post:
      description: Completes a challenge for an existing passkey (Conditional UI)
      operationId: PasskeyMediationFinish
      tags:
        - Passkeys
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - assertionResponse
                - clientInformation
                - processID
              properties:
                assertionResponse:
                  type: string
                clientInformation:
                  type: object
                  required:
                    - remoteAddress
                    - userAgent
                    - userVerifyingPlatformAuthenticatorAvailable
                    - conditionalMediationAvailable
                    - parsedDeviceInfo
                  properties:
                    remoteAddress:
                      description: Client's IP address
                      type: string
                      example: '::ffff:172.18.0.1'
                    userAgent:
                      description: Client's user agent
                      type: string
                      example: >-
                        Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0
                        Safari/537.36
                    clientEnvHandle:
                      description: Client's environment handle
                      type: string
                    javascriptFingerprint:
                      description: Client's fingerprint
                      type: string
                    javaScriptHighEntropy:
                      type: object
                      required:
                        - platform
                        - platformVersion
                        - mobile
                      properties:
                        platform:
                          type: string
                        platformVersion:
                          type: string
                        mobile:
                          type: boolean
                    bluetoothAvailable:
                      description: Client's Bluetooth availability
                      type: boolean
                    passwordManagerAvailable:
                      description: Client's password manager availability
                      type: boolean
                    userVerifyingPlatformAuthenticatorAvailable:
                      type: boolean
                    conditionalMediationAvailable:
                      type: boolean
                    privateMode:
                      type: boolean
                    parsedDeviceInfo:
                      type: object
                      required:
                        - browserName
                        - browserVersion
                        - osName
                        - osVersion
                      properties:
                        browserName:
                          type: string
                        browserVersion:
                          type: string
                        osName:
                          type: string
                        osVersion:
                          type: string
                processID:
                  type: string
                signPasskeyData:
                  type: boolean
      responses:
        '200':
          description: Passkey mediation has been success, thus we can return a userID
          content:
            application/json:
              schema:
                type: object
                required:
                  - passkeyData
                properties:
                  passkeyData:
                    type: object
                    required:
                      - id
                      - userID
                      - username
                      - ceremonyType
                      - challengeID
                      - aaguidDetails
                    properties:
                      id:
                        type: string
                      userID:
                        type: string
                      username:
                        type: string
                      ceremonyType:
                        type: string
                        enum:
                          - local
                          - cda
                          - security-key
                      challengeID:
                        type: string
                      aaguidDetails:
                        type: object
                        required:
                          - aaguid
                          - name
                          - iconLight
                          - iconDark
                        properties:
                          aaguid:
                            type: string
                          name:
                            type: string
                          iconLight:
                            type: string
                          iconDark:
                            type: string
                  signedPasskeyData:
                    type: string
                  error:
                    oneOf:
                      - type: object
                        required:
                          - type
                        properties:
                          type:
                            type: string
                            enum:
                              - credentialDeleted
                      - type: object
                        required:
                          - type
                          - alternativeProjectName
                        properties:
                          type:
                            type: string
                            enum:
                              - alternativeProjectID
                          alternativeProjectName:
                            type: string
                    discriminator:
                      propertyName: type
                      mapping:
                        credentialDeleted: >-
                          #/components/schemas/passkeyMediationFinishErrorCredentialDeleted
                        alternativeProjectID: >-
                          #/components/schemas/passkeyMediationFinishErrorAlternativeProject
        default:
          description: Error
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    required:
                      - httpStatusCode
                      - message
                      - requestData
                      - runtime
                    properties:
                      httpStatusCode:
                        description: HTTP status code of operation
                        type: integer
                        format: int32
                      message:
                        type: string
                        example: OK
                      requestData:
                        description: >-
                          Data about the request itself, can be used for
                          debugging
                        type: object
                        required:
                          - requestID
                        properties:
                          requestID:
                            description: >-
                              Unique ID of request, you can provide your own
                              while making the request, if not the ID will be
                              randomly generated on server side
                            type: string
                            example: req-557...663
                          link:
                            description: Link to dashboard with details about request
                            type: string
                            example: >-
                              https://my.corbado.com/requests/req-xxxxxxxxxxxxxxxxxxx
                      runtime:
                        description: Runtime in seconds for this request
                        type: number
                        format: float
                        example: 0.06167686
                  - type: object
                    required:
                      - error
                    properties:
                      data:
                        type: object
                      error:
                        type: object
                        required:
                          - type
                        properties:
                          type:
                            description: Type of error
                            type: string
                          details:
                            description: Details of error
                            type: string
                          validation:
                            description: Validation errors per field
                            type: array
                            items:
                              type: object
                              required:
                                - field
                                - message
                              properties:
                                field:
                                  type: string
                                message:
                                  type: string
                          links:
                            description: Additional links to help understand the error
                            type: array
                            items:
                              type: string
